<template>
	<div class="page" :style="{ height: height }" >
		<div class="swiper" :style="containerStyle" >
			<block v-for="(item, index) in videoList" :key="index">
				<lizhao-video class="video" 
							:src="item.src" 
							:short="item.short" 
							:height="height" 
							:width="width" 
							:duration="item.duration" 
							:play="item.flag">
				</lizhao-video>
				<cover-view class="cover-view-marks">
					<div :style="{ height: height,width: width }" @click.stop="clickVideo" @touchmove="ListTouchMove" @touchend.stop="ListTouchEnd"
							@touchstart="ListTouchStart">
					</div>
				</cover-view>
				<cover-view class="cover-view-left">
					<text class="view-left-text"  v-if="item.nickname">@{{item.nickname}}</text>
					<view class="view-left-text-content" v-if="item.content"><text class="text-content-text">{{item.content}}</text><text class="text-content-advert" v-if="item.advert">广告</text></view>
					<view style="flex-direction: row;" v-if="item.dubbedText"><view class="view-left-dubbedText"><text class="view-left-dubbedText-text" :style="{transform: `translateX(${translateX}px)`}">{{item.dubbedText}}</text></view></view>
					<view class="seedetails" v-if="item.advert"><text class="seedetails-text" @click="navigateTo(item.advertUrl)">查看详情 ></text></view>
				</cover-view>
				<cover-view class="cover-view-right">
					<!-- 头像 -->
					<cover-image :src="item.avater" class="avater img" @click.stop="tapAvater"></cover-image>
					<text v-if="!isFllow" @click="setFllow(item.userId)" class="right-follow">+</text>
					<!-- 点赞 -->
					<cover-image :src="isbingoIds?'/static/test/img/axc.png':'/static/test/img/bed.png' " class="img-left" @click.stop="tapLove"></cover-image>
					<text class="right-text">{{item.messCount}}</text>
					<!-- 评论 -->
					<cover-image src="/static/test/img/ay2.png" style="height: 80upx;"  class="img-left" @click.stop="tapMsg"></cover-image>
					<text class="right-text">{{videoPlNum}}</text>
					<!-- 收藏 -->
					<cover-image :src="iscollectedIds ? '/static/test/img/tabbar/guanzhuactive.png':'/static/test/img/tabbar/guanzhu.png'" 
								style="height: 76upx;"  class="img-left" @click.stop="mesCollection">
					</cover-image>
					<text class="right-text">{{item.messCollect}}</text>
					<cover-image src="/static/test/changpian.png" class="musicIcon img"></cover-image>
				</cover-view>
			</block>
		</div>
	</div>
</template>

<script>
	import { mapGetters } from 'vuex';
	import config from '@/utils/config.js'
	import lizhaoVideo from '@/components/lizhao-video/lizhao-video.vue'
	import $https from '@/utils/lib/https.js';
	let timer = null
	
	export default { 
		components:{
			lizhaoVideo
		},
		computed:{
			...mapGetters(['collectedIds', 'bingoIds', 'concernedIds']),
			//关注
			isFllow: function() {
				return this.concernedIds.some(v => v == this.videoList[this.index].userId) ? true : false
			},
			//是否点赞
			isbingoIds: function() {
				return this.bingoIds.some(v => v == this.videoList[this.index].id) ? true : false
			},
			// 是否收藏
			iscollectedIds: function() {
				return this.collectedIds.some(v => v == this.videoList[this.index].id) ? true : false
			}
		},
		data(){
			return{
				// 视频id
				videoId: '',
				// 评论数量
				videoPlNum: '',
				pageNo: 1 ,
				// 视频集合分页
				videoPage: 1,
				// 计数
				count: 1,
				
				translateX:'10',
				height:'667px',
				index:0,
				width:'',
				sysheight:0,
				containerStyle:'',
				distance:0,
				listTouchStartY: 0,
				listTouchDirection: null,
				scroll:false,
				videoList:[
					{
						src:'',//视频地址
						flag:false,//是否播放
						check:false,//是否点赞
						avater:'',//用户头像
						//duration:10,//时长
						nickname:'',//昵称
						advert:false,//是否广告
						title:'',//标题
						content:'',//内容
						dubbedText:'',//配音文字
						messCount:'',//点赞数
						messCollect:'',//评论数
						forwardsNum:'7680',//转发数
						userId: '' ,//视频发布者id
						id: '' //视频id
					}
				]
			}
		},
		created(){
			//#ifdef APP-PLUS
			plus.screen.lockOrientation("portrait-primary")
			//#endif
			this.sysheight = uni.getSystemInfoSync().windowHeight
			this.height = `${this.sysheight}px` 
			let width = uni.getSystemInfoSync().windowWidth
			this.width = `${width}px` 
			this.$nextTick(()=>{
				this.setBackground()
			})
		},
		onShow(){
			this.animateTranslateX()
			setTimeout(()=>{
				this.videoList[this.index].flag = true
			},1000)
		},
		onHide(){
			for (let item of this.videoList) {
				item.flag = false
			}
			clearInterval(timer)
		},
		onLoad(e) {
			this.videoId = e.id
			this.getDeatails()
			this.getRandomVidio()
			this.getOneUserPlList()
			console.log(this.isbingoIds)
		},
		methods:{
			//设置关注
			setFllow(userId) {
				if(this.isFllow==true){
					
				}else{
					let that = this
					uni.request({
						url: config.baseUrl + '/chat/addFollow',
						data:{
							concernerId: userId
						},
						method: 'GET',
						header: {
						    'Authorization': this.$store.state.login.token ,
							'content-type':'application/json;charset=UTF-8;'
						},
						success(res) {
							if(res.data.code==200){
								that.$store.commit('user/SET_FLLOW', {
									id: userId,
									type: this.isFllow
								})
							}else{
								uni.showToast({
									title: res.data.msg,
									icon: 'none'
								})
							}
						}
					})
				}
			},
			//获取单个视频信息
			getDeatails() {
				$https.get('/messPublish/selectPublishById',{
					id: this.videoId,
					namingSerialNumber: 0,
					messTypeId: 9
				}).then(res => {
					this.videoList[this.index].src = encodeURI(config.baseUrl +'/file/' + res.data.messVidio)
					this.videoList[this.index].avater = config.baseUrl +'/file/' + res.data.userHeadImage
					this.videoList[this.index].nickname = res.data.userName
					this.videoList[this.index].content = res.data.messText
					this.videoList[this.index].userId = res.data.userId
					this.videoList[this.index].messCount = res.data.messCount
					this.videoList[this.index].messCollect = res.data.messCollect
					this.videoList[this.index].id = res.data.id
					this.videoList[this.index].dubbedText = res.data.title
				})
			},
			// 视频随机获取
			getRandomVidio(){
				$https.get('/messPublish/randomVidio',{
					messSortGrade: 1
				}).then(res=>{
					let v = res.data
					let videoUrl = ''
					// 解决视频地址中文解析失败
					videoUrl = encodeURI(config.baseUrl +'/file/' + v.messVidio)
					 this.$set(v,"src",videoUrl)
					 this.$set(v,"avater",config.baseUrl +'/file/' + v.userHeadImage)
					 this.$set(v,"nickname",v.userName)
					 this.$set(v,"content",v.messText)
					 this.$set(v,"dubbedText",v.title)
					this.videoList.push(v)
				})
			},
			navigateTo(url){
				uni.navigateTo({
				    url: `/pages/webView/webView?url=${url}`
				});
			},
			animateTranslateX(){
				let num= this.videoList[this.index].dubbedText.length*9
				timer=setInterval(()=>{
					this.translateX--
					if(this.translateX==-(num+35)){
						this.translateX=num
					}
				},100)
				
			},
			setBackground(){
				var Color = plus.android.importClass("android.graphics.Color");  
				plus.android.importClass("android.view.Window");  
				var mainActivity = plus.android.runtimeMainActivity();  
				var window_android = mainActivity.getWindow();  
				window_android.setNavigationBarColor(Color.BLACK);   
			},
			clickVideo(e){
				return
			},
			ListTouchStart(e) {
				this.listTouchStartY = e.changedTouches[0].pageY
				this.moverOnoff=false
			},
			ListTouchMove(e) {
				this.listTouchDirection = this.listTouchStartY - e.changedTouches[0].pageY > 10 ? -1 : 0
				this.listTouchDirection = e.changedTouches[0].pageY - this.listTouchStartY > 10 ?  1 : this.listTouchDirection
				const distance = this.distance + e.changedTouches[0].pageY - this.listTouchStartY
				if(distance>0) return
				if(Math.abs(this.listTouchStartY - e.changedTouches[0].pageY)<2){
					this.listTouchDirection = null
				}
			},
			ListTouchEnd(e) {
				try{
					this.videoList[this.index].flag = !this.videoList[this.index].flag
					this.translateX=10
				}catch(e){
				}
				if(this.scroll) return
				if(!this.listTouchDirection){
					return
				}
				const destination = this.listTouchDirection*this.sysheight+this.distance
				if(destination>0||destination<-this.sysheight*(this.videoList.length-1)) return
				for (let item of this.videoList) {
					item.flag = false
				}
				this.animate(destination, this.listTouchDirection)
				this.index = this.index - this.listTouchDirection
				this.videoList[this.index].flag = true
				this.listTouchDirection = null
				
				this.getRandomVidio()
				this.$store.commit('index/setVideoId',this.videoList[this.index].id)
				// this.videoPlNum = ''
				this.getUserPlList()
				console.log('滑动')
			},
			animate(des, direc) {
				let { distance } = this
				let promise = new Promise((resolve,reject)=>{
					this.scroll = true
					const temp = setInterval(() => {
						if ((direc === -1 && des < distance) || (direc === 1 && des > distance)) {
							distance += 100 * direc
							this.containerStyle = `transform:translateY(${distance}px)`
						} else {
							clearInterval(temp)
							distance = des
							this.distance = des
							this.containerStyle = `transform:translateY(${distance}px)`
							this.scroll = false
							resolve()
						}
					}, 50)
				})
				return promise
			},
			// 第一次进入时获取用户评论数量
			getOneUserPlList(){
				var that = this;
				uni.request({
				    url: config.baseUrl + '/mescomment/list',
				    data: {
				        messPublishId: that.videoId,
						pageNo: that.pageNo
				    },
					method: 'GET',
				    header: {
				        'Authorization': that.$store.state.login.token ,
						'content-type':'application/json;charset=UTF-8;'
				    },
				    success: (res) => {
						if(res.data.code==200){
							that.videoPlNum = res.data.data.count
							that.$store.dispatch('index/getvideoPlList',res.data.data.page.list)
						}else{
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							})
						}
				    }
				})
			},
			// 滑动时获取用户评论数量
			getUserPlList(){
				var that = this;
				uni.request({
				    url: config.baseUrl + '/mescomment/list',
				    data: {
				        messPublishId: that.videoList[that.index].id,
						pageNo: that.pageNo
				    },
					method: 'GET',
				    header: {
				        'Authorization': that.$store.state.login.token ,
						'content-type':'application/json;charset=UTF-8;'
				    },
				    success: (res) => {
						if(res.data.code==200){
							that.videoPlNum = res.data.data.count
							that.$store.dispatch('index/getvideoPlList',res.data.data.page.list)
						}else{
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							})
						}
				    }
				})
			},
			// 点赞
			tapLove(){
				$https.get('/messPublish/updateNum',{
					id: this.videoList[this.index].id,
				}).then(res => {
					this.$store.commit('user/SET_BINGOIDS', {
						id: this.videoList[this.index].id,
						type: this.isbingoIds
					})
					this.isbingoIds ? this.videoList[this.index].messCount++ : this.videoList[this.index].messCount--
				})
			},
			//收藏
			mesCollection() {
				$https.get('/messPublish/updateCollectNum',{
					id: this.videoList[this.index].id,
				}).then(res => {
					this.iscollectedIds ? this.videoList[this.index].messCollect-- : this.videoList[this.index].messCollect++
					this.$store.commit('user/SET_COLLECTEDIDS', {
						id: this.videoList[this.index].id,
						type: this.iscollectedIds
					})
					//触发首页收藏回调
					uni.$emit('setStroe',{mesId:that.videoList[that.index].id,type:that.iscollectedIds})
				})
			},
			// 点击头像
			tapAvater(){
				return
			},
			// 评论
			tapMsg(){
				this.$store.commit('index/setVideoId',this.videoList[this.index].id)
				uni.getSubNVueById('drawer').show('slide-in-bottom', 200,()=>{});
			}
		}
	}
</script>

<style scoped >
	/* 添加样式 */
	.video-pl-box{
		position: fixed;
		bottom: 0;
		left: 0;
		width: 750rpx;
	}
	
	.iconfont {  
	    font-family: iconfont;  
	}  
	.page{
		flex: 1;
		overflow: hidden;
		background-color: #000;
	}
	.swiper{
		position: relative;
		background-color: #000;
	}
	.cover-view-center{
		position: fixed;
		/* opacity: 0.1; */
		z-index: 100;
	}
	.cover-view-left{
		position: absolute;
		margin-left: 20upx;
		width: 500upx;
		bottom: 50upx;
		z-index: 9999;
		font-size: 14px;
		color: #FFFFFF;
		//#ifndef APP-PLUS-NVUE
		white-space: pre-wrap;  
		text-overflow:ellipsis;
		overflow:hidden;
		//#endif
	}
	.left-text{
		font-size: 14px;
		color: #FFFFFF;
	}
	.avater{
		border-radius: 45upx;
		border-width: 2px;
		border-style: solid;
		border-color: #FFFFFF;
	}
	.cover-view-marks{
		position: absolute;
		bottom: 80upx;
		margin-right: 20upx;
		right: 0;
		z-index: 9999;
	}
	
	.cover-view-right{
		position: absolute;
		bottom: 0px;
		margin-right: 20upx;
		right: 10upx;
		z-index: 9999;
		text-align: center;
		padding: 0 4upx;
		
	}
	.seedetails{ width: 480upx;height: 70upx;text-align: center;background-color: rgba(177,68,48,0.8);border-radius: 6px;margin-top: 10px; }
	.seedetails-text{font-size: 16px;color: #FFFFFF;text-align: center;line-height: 70upx;}
	.view-left-text{color: #FFFFFF;font-size: 18px;margin-bottom: 10upx;font-weight: bold;}
	/* 广告 */
	.view-left-text-content{padding-right: 50upx;}
	.text-content-advert{position: absolute;right: 8px;bottom: 10upx; font-size: 10px;background-color:rgba(255,255,255,0.1);color: #eee;border-radius: 2px;padding: 2px 5px;width: 66upx;flex-direction: row;text-align: center;}
	.text-content-text{color: #eee;font-size: 16px;lines: 2;overflow: hidden;text-overflow: ellipsis;line-height:50upx;}
	
	/* 广告 */
	.view-left-dubbedText{color: #FFFFFF;font-size: 16px;width:300upx; flex-direction: row;}
	.view-left-dubbedText-text{color: #eee;font-size: 16px;line-height: 50upx;}
	.view-left-icon{color: #eee;font-size: 20px;}
	.right-follow{
		position: absolute;z-index:100;top: 75upx;left: 22upx;
		color: #FFFFFF;font-size: 20px;width:50upx;height:50upx;background-color: #F12F5B;text-align: center;line-height: 50upx;border-radius: 30upx;
	}
	.right-text{
		color: #FFFFFF;font-size: 11px;text-align: center;margin-bottom: 40upx;
	}
	.right-iconfont{
		color: #eee;font-size: 32px;text-align: center;
	} 
	.right-checkLove{
		color: #FD0606;font-size: 30px;text-align: center;
	}
	.img{
		height: 90upx;width: 90upx;margin-bottom: 60upx;
	}
	.img-left{
		width: 80upx;height: 66upx;
	}
	.musicIcon{margin-top: 40upx; }

	
</style>
